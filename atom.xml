<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>风清袖一的博客</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://fengqingxiuyi.github.io/"/>
  <updated>2016-11-10T11:03:32.000Z</updated>
  <id>https://fengqingxiuyi.github.io/</id>
  
  <author>
    <name>青峰</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Sublime Text 3折腾记录</title>
    <link href="https://fengqingxiuyi.github.io/2016/11/10/%E5%9F%BA%E6%9C%AC%E5%B7%A5%E5%85%B7/Sublime/Sublime%20Text%203%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95/"/>
    <id>https://fengqingxiuyi.github.io/2016/11/10/基本工具/Sublime/Sublime Text 3折腾记录/</id>
    <published>2016-11-10T09:55:19.000Z</published>
    <updated>2016-11-10T11:03:32.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LICENSE"><a href="#LICENSE" class="headerlink" title="LICENSE"></a>LICENSE</h1><p>提供网上流传已久的注册码，自我感觉是通用的，不过还是说明一下自己的版本：<font color="red">Build 3114</font></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">—– BEGIN LICENSE —–</div><div class="line">Anthony Sansone</div><div class="line">Single User License</div><div class="line">EA7E-878563</div><div class="line">28B9A648 42B99D8A F2E3E9E0 16DE076E</div><div class="line">E218B3DC F3606379 C33C1526 E8B58964</div><div class="line">B2CB3F63 BDF901BE D31424D2 082891B5</div><div class="line">F7058694 55FA46D8 EFC11878 0868F093</div><div class="line">B17CAFE7 63A78881 86B78E38 0F146238</div><div class="line">BAE22DBB D4EC71A1 0EC2E701 C7F9C648</div><div class="line">5CF29CA3 1CB14285 19A46991 E9A98676</div><div class="line">14FD4777 2D8A0AB6 A444EE0D CA009B54</div><div class="line">—— END LICENSE ——</div><div class="line"></div><div class="line">或者</div><div class="line"></div><div class="line">—– BEGIN LICENSE —–</div><div class="line">Alexey Plutalov</div><div class="line">Single User License</div><div class="line">EA7E-860776</div><div class="line">3DC19CC1 134CDF23 504DC871 2DE5CE55</div><div class="line">585DC8A6 253BB0D9 637C87A2 D8D0BA85</div><div class="line">AAE574AD BA7D6DA9 2B9773F2 324C5DEF</div><div class="line">17830A4E FBCF9D1D 182406E9 F883EA87</div><div class="line">E585BBA1 2538C270 E2E857C2 194283CA</div><div class="line">7234FF9E D0392F93 1D16E021 F1914917</div><div class="line">63909E12 203C0169 3F08FFC8 86D06EA8</div><div class="line">73DDAEF0 AC559F30 A6A67947 B60104C6</div><div class="line">—— END LICENSE ——</div></pre></td></tr></table></figure>
<h1 id="重置"><a href="#重置" class="headerlink" title="重置"></a>重置</h1><p>网址：<a href="http://www.sublimetext.com/docs/3/revert.html" target="_blank" rel="external">http://www.sublimetext.com/docs/3/revert.html</a></p>
<p>内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">SUBLIME TEXT 3 DOCUMENTATION</div><div class="line">Reverting to a Freshly Installed State</div><div class="line">Sublime Text can be reverted to a freshly installed state by removing your data folder. Depending on your operating system, this folder is located in:</div><div class="line"></div><div class="line">OS X: ~/Library/Application Support/Sublime Text 3</div><div class="line">Windows: %APPDATA%\Sublime Text 3</div><div class="line">Linux: ~/.config/sublime-text-3</div><div class="line">To revert to a freshly installed state, you can:</div><div class="line"></div><div class="line">Exit Sublime Text</div><div class="line">Move the data folder to a backup location</div><div class="line">Start Sublime Text</div><div class="line">When restarted, a fresh data folder will be created, just as it was the first time you ran Sublime Text. Keep in mind that this will also remove all of your settings and packages. The backup copy of your data folder can be used to retrieve configuration, or custom packages that can not be reinstalled.</div><div class="line"></div><div class="line">OS X</div><div class="line">On OS X, the ~/Library folder is hidden by default. To navigate there, select the Go ▸ Go to Folder menu item in Finder, and type in ~/Library.</div><div class="line"></div><div class="line">鼠标点击Finder后，按快捷键control+shift+g，在出现的弹框中输入正确的完整路径即可直接到达</div><div class="line"></div><div class="line">Windows</div><div class="line">In Windows, cache files are stored in a separate location, %LOCALAPPDATA%\Sublime Text 3, to improve performance with roaming profiles.</div></pre></td></tr></table></figure>
<h1 id="安装Package-Control"><a href="#安装Package-Control" class="headerlink" title="安装Package Control"></a>安装Package Control</h1><h2 id="自动安装"><a href="#自动安装" class="headerlink" title="自动安装"></a>自动安装</h2><p>使用快捷键control+`或通过菜单选项View &gt; Show Console进入控制台Console（再进行一次同样的操作，可以退出控制台Console）。</p>
<p>复制其中一个命令，粘贴到控制台中，回车运行，如果失败就换另一个，如果都失败，请选择<code>手动安装</code>方式。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">import urllib.request,os,hashlib; h = &apos;7183a2d3e96f11eeadd761d777e62404e330c659d4bb41d3bdf022e94cab3cd0&apos;; pf = &apos;Package Control.sublime-package&apos;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( &apos;http://sublime.wbond.net/&apos; + pf.replace(&apos; &apos;, &apos;%20&apos;)).read(); dh = hashlib.sha256(by).hexdigest(); print(&apos;Error validating download (got %s instead of %s), please try manual install&apos; % (dh, h)) if dh != h else open(os.path.join( ipp, pf), &apos;wb&apos; ).write(by)</div><div class="line"></div><div class="line">或者</div><div class="line"></div><div class="line">import  urllib.request,os;pf=&apos;Package Control.sublime-package&apos;;ipp=sublime.installed_packages_path();urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler()));open(os.path.join(ipp,pf),&apos;wb&apos;).write(urllib.request.urlopen(&apos;http://sublime.wbond.net/&apos;+pf.replace(&apos; &apos;,&apos;%20&apos;)).read())</div></pre></td></tr></table></figure>
<h2 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h2><ol>
<li>打开网址：<a href="https://sublime.wbond.net/Package%20Control.sublime-package，会自动下载名为Package%20Control.sublime-package的文件。" target="_blank" rel="external">https://sublime.wbond.net/Package%20Control.sublime-package，会自动下载名为Package%20Control.sublime-package的文件。</a></li>
<li>打开Sublime Text 3，选择菜单Preferences-&gt;Browse Packages… 打开安装目录</li>
<li>此时会进入到一个叫做Packages的目录下，点击进入上一层目录Sublime Text 3，在此目录下有一个文件夹叫做Installed Packages，把刚才下载的文件放到这里就可以了。</li>
<li>重启sublime text3，观察Preferences菜单最下边是否有Package Settings 和Package Control两个选项，如果有，则代表安装成功了。</li>
<li>此时使用快捷键control+shift+p，输入ip，选择Package Control: Install Package，回车，等一会，之后想安装什么插件，在里面搜索名字就可以了。</li>
</ol>
<font color="red"><strong><em>注意点：</em></strong></font>

<p>需要注意的一点是，经常会出现网络联不通的情况，不要着急，这个很正常，如果出现，隔一会再弄，一般都会好的。</p>
<hr>
<p><strong>版权声明</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本网站如未注明转载，均由<a href="https://fengqingxiuyi.github.io/">青峰</a>创作并维护；本网站采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。转载请注明作者及出处。</p>
<p>本文永久链接：<a href="https://fengqingxiuyi.github.io/2016/11/10/基本工具/Sublime/Sublime">https://fengqingxiuyi.github.io/2016/11/10/基本工具/Sublime/Sublime</a> Text 3折腾记录/</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LICENSE&quot;&gt;&lt;a href=&quot;#LICENSE&quot; class=&quot;headerlink&quot; title=&quot;LICENSE&quot;&gt;&lt;/a&gt;LICENSE&lt;/h1&gt;&lt;p&gt;提供网上流传已久的注册码，自我感觉是通用的，不过还是说明一下自己的版本：&lt;font color=&quot;r
    
    </summary>
    
      <category term="基本工具" scheme="https://fengqingxiuyi.github.io/categories/%E5%9F%BA%E6%9C%AC%E5%B7%A5%E5%85%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>tinypng的使用</title>
    <link href="https://fengqingxiuyi.github.io/2016/11/10/%E5%9F%BA%E6%9C%AC%E5%B7%A5%E5%85%B7/%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9/tinypng/tinypng%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://fengqingxiuyi.github.io/2016/11/10/基本工具/图片压缩/tinypng/tinypng的使用/</id>
    <published>2016-11-10T08:32:19.000Z</published>
    <updated>2016-11-10T08:40:02.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>类型：</strong>在线压缩png图片，当然也支持jpg图片的压缩。</p>
<p><strong>网址：</strong><a href="https://tinypng.com/" target="_blank" rel="external">https://tinypng.com/</a></p>
<p><strong>压缩方式：</strong></p>
<ol>
<li>普通压缩方式：根据页面的提示 Drop 或 Open</li>
<li>压缩技巧：首先执行 普通压缩方式 一次，然后如果想要持续压缩，不需要将图片下载下来，再执行 普通压缩方式 ，只需要 鼠标悬浮在含有下划线的download字样上，变成手势模样，垂直向下拖拽1厘米即可再次压缩，具体使用看图：<img src="../../../../../../../images/基本工具/图片压缩/tinypng/tinypng的使用.gif" alt="tinypng的使用"></li>
</ol>
<hr>
<p><strong>版权声明</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本网站如未注明转载，均由<a href="https://fengqingxiuyi.github.io/">青峰</a>创作并维护；本网站采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。转载请注明作者及出处。</p>
<p>本文永久链接：<a href="https://fengqingxiuyi.github.io/2016/11/10/基本工具/图片压缩/tinypng/tinypng的使用/">https://fengqingxiuyi.github.io/2016/11/10/基本工具/图片压缩/tinypng/tinypng的使用/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;类型：&lt;/strong&gt;在线压缩png图片，当然也支持jpg图片的压缩。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;网址：&lt;/strong&gt;&lt;a href=&quot;https://tinypng.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;htt
    
    </summary>
    
      <category term="基本工具" scheme="https://fengqingxiuyi.github.io/categories/%E5%9F%BA%E6%9C%AC%E5%B7%A5%E5%85%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>模块版本更新流程</title>
    <link href="https://fengqingxiuyi.github.io/2016/11/10/ShowJoy/%E6%A8%A1%E5%9D%97/%E6%A8%A1%E5%9D%97%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E6%B5%81%E7%A8%8B/"/>
    <id>https://fengqingxiuyi.github.io/2016/11/10/ShowJoy/模块/模块版本更新流程/</id>
    <published>2016-11-10T08:12:15.000Z</published>
    <updated>2016-11-10T08:17:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>案例持续更新…</p>
<h1 id="案例1"><a href="#案例1" class="headerlink" title="案例1"></a>案例1</h1><p>工程中包含<code>主模块</code>、<code>子模块A</code>、<code>子模块B</code>，其中<code>主模块</code>依赖<code>子模块A</code>和<code>子模块B</code>，<code>子模块A</code>也依赖<code>子模块B</code>。现在<code>子模块B</code>发现了Bug，需要解决Bug并更新版本。</p>
<h2 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h2><p>当<code>子模块B</code>更新版本后，提交到Gitlab，并使用Jenkins成功构建后，<strong><em>我们不需要更新 子模块A 中 子模块B 的版本，只需要更新 主模块 中 子模块B 的版本，如果出现版本冲突，比如说现在 主模块 依赖 子模块A ，主模块 又依赖了 新子模块B 的版本，只需要把不必要的版本依赖 剔除 即可</em></strong></p>
<h2 id="主要原理"><a href="#主要原理" class="headerlink" title="主要原理"></a>主要原理</h2><p>工程 Build 后，一个模块只会存在一个版本，否则就会出现版本<font color="red">依赖冲突</font>！！！</p>
<h1 id="案例2"><a href="#案例2" class="headerlink" title="案例2"></a>案例2</h1><p>工程中包含<code>主模块</code>、<code>子模块A</code>、<code>子模块B</code>，其中<code>主模块</code>依赖<code>子模块A</code>和<code>子模块B</code>，<code>子模块B</code>又依赖<code>子模块A</code>。此时<code>子模块A</code>改变了内容，需要版本更新，同时也涉及到了<code>子模块B</code>中的某些改动。</p>
<h2 id="注意点-1"><a href="#注意点-1" class="headerlink" title="注意点"></a>注意点</h2><p>此时当<code>子模块A</code>更新版本后，同时需要更改<code>子模块B</code>依赖的<code>子模块A</code>的版本，同时也需要更新<code>子模块B</code>的版本，并进行项目构建。</p>
<h2 id="主要原理-1"><a href="#主要原理-1" class="headerlink" title="主要原理"></a>主要原理</h2><p>如果不更改<code>子模块B</code>依赖的<code>子模块A</code>的版本，那么<code>子模块B</code>将编译不过。</p>
<hr>
<p><strong>版权声明</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本网站如未注明转载，均由<a href="https://fengqingxiuyi.github.io/">青峰</a>创作并维护；本网站采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。转载请注明作者及出处。</p>
<p>本文永久链接：<a href="https://fengqingxiuyi.github.io/2016/11/10/ShowJoy/模块/模块版本更新流程/">https://fengqingxiuyi.github.io/2016/11/10/ShowJoy/模块/模块版本更新流程/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;案例持续更新…&lt;/p&gt;
&lt;h1 id=&quot;案例1&quot;&gt;&lt;a href=&quot;#案例1&quot; class=&quot;headerlink&quot; title=&quot;案例1&quot;&gt;&lt;/a&gt;案例1&lt;/h1&gt;&lt;p&gt;工程中包含&lt;code&gt;主模块&lt;/code&gt;、&lt;code&gt;子模块A&lt;/code&gt;、&lt;code&gt;子模块B&lt;
    
    </summary>
    
      <category term="ShowJoy" scheme="https://fengqingxiuyi.github.io/categories/ShowJoy/"/>
    
    
      <category term="模块" scheme="https://fengqingxiuyi.github.io/tags/%E6%A8%A1%E5%9D%97/"/>
    
  </entry>
  
  <entry>
    <title>抽离模块注意点</title>
    <link href="https://fengqingxiuyi.github.io/2016/11/10/ShowJoy/%E6%A8%A1%E5%9D%97/%E6%8A%BD%E7%A6%BB%E6%A8%A1%E5%9D%97%E6%B3%A8%E6%84%8F%E7%82%B9/"/>
    <id>https://fengqingxiuyi.github.io/2016/11/10/ShowJoy/模块/抽离模块注意点/</id>
    <published>2016-11-10T08:12:15.000Z</published>
    <updated>2016-11-10T08:20:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>注意点持续更新…</p>
<h1 id="注意点1"><a href="#注意点1" class="headerlink" title="注意点1"></a>注意点1</h1><p>模块抽离，除了要删除不需要的文件外，最重要的是不要更改【java文件root路径】，一旦修改了，一定要记得修改Androidmanifest.xml中引用的Activity等基本组件的路径</p>
<p>例如：</p>
<p>Guide模块</p>
<p>包名：com.showjoy.shop.guide<br>java文件root路径：com.showjoy.shop.module.guide</p>
<p>—————我是分割线—————</p>
<p>主模块</p>
<p>包名：com.showjoy.shop<br>Androidmanifest.xml中GuideActivity的引用路径为：.module.guide.GuideActivity</p>
<hr>
<p><strong>版权声明</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本网站如未注明转载，均由<a href="https://fengqingxiuyi.github.io/">青峰</a>创作并维护；本网站采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。转载请注明作者及出处。</p>
<p>本文永久链接：<a href="https://fengqingxiuyi.github.io/2016/11/10/ShowJoy/模块/抽离模块注意点/">https://fengqingxiuyi.github.io/2016/11/10/ShowJoy/模块/抽离模块注意点/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;注意点持续更新…&lt;/p&gt;
&lt;h1 id=&quot;注意点1&quot;&gt;&lt;a href=&quot;#注意点1&quot; class=&quot;headerlink&quot; title=&quot;注意点1&quot;&gt;&lt;/a&gt;注意点1&lt;/h1&gt;&lt;p&gt;模块抽离，除了要删除不需要的文件外，最重要的是不要更改【java文件root路径】，一旦修改
    
    </summary>
    
      <category term="ShowJoy" scheme="https://fengqingxiuyi.github.io/categories/ShowJoy/"/>
    
    
      <category term="模块" scheme="https://fengqingxiuyi.github.io/tags/%E6%A8%A1%E5%9D%97/"/>
    
  </entry>
  
  <entry>
    <title>Iterable和Iterator的区别</title>
    <link href="https://fengqingxiuyi.github.io/2016/11/10/Python/Iterable%E5%92%8CIterator%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>https://fengqingxiuyi.github.io/2016/11/10/Python/Iterable和Iterator的区别/</id>
    <published>2016-11-10T05:56:57.000Z</published>
    <updated>2016-11-10T06:01:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>转载自教程<a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/00143178254193589df9c612d2449618ea460e7a672a366000" target="_blank" rel="external">廖雪峰-Python教程-迭代器</a></p>
<div class="x-wiki-content"><br>        <p>我们已经知道，可以直接作用于<code>for</code>循环的数据类型有以下几种：</p><br><p>一类是集合数据类型，如<code>list</code>、<code>tuple</code>、<code>dict</code>、<code>set</code>、<code>str</code>等；</p><br><p>一类是<code>generator</code>，包括生成器和带<code>yield</code>的generator function。</p><br><p>这些可以直接作用于<code>for&lt;<br>/code&gt;循环的对象统称为可迭代对象：<code>Iterable</code>。</code></p><br><p>可以使用<code>isinstance()</code>判断一个对象是否是<code>Iterable</code>对象：</p><br><pre><code>&gt;&gt;&gt; from collections import Iterable<br>&gt;&gt;&gt; isinstance([], Iterable)<br>True<br>&gt;&gt;&gt; isinstance({}, Iterable)<br>True<br>&gt;&gt;&gt; isinstance(&#39;abc&#39;, Iterable)<br>True<br>&gt;&gt;&gt; isinstance((x for x in range(10)), Iterable)<br>True<br>&gt;&gt;&gt; isinstance(100, Iterable)<br>False<br></code></pre><p>而生成器不但可以作用于<code>for</code>循环，还可以被<code>next()</code>函数不断调用并返回下一个值，直到最后抛出<code>StopIteration</code>错误表示无法继续返回下一个值了。</p><br><p>可以被<code>next()</code>函数调用并不断返回下一个值的对象称为迭代器：<code>Iterator</code>。</p><br><p>可以使用<code>isinstance()</code>判断一个对象是否是<code>Iterator</code>对象：</p><br><pre><code>&gt;&gt;&gt; from collections import Iterator<br>&gt;&gt;&gt; isinstance((x for x in range(10)), Iterator)<br>True<br>&gt;&gt;&gt; isinstance([], Iterator)<br>False<br>&gt;&gt;&gt; isinstance({}, Iterator)<br>False<br>&gt;&gt;&gt; isinstance(&#39;abc&#39;, Iterator)<br>False<br></code></pre><p>生成器都是<code>Iterator</code>对象，但<code>list</code>、<code>dict</code>、<code>str</code>虽然是<code>Iterable</code>，却不是<code>Iterator</code>。</p><br><p>把<code>list</code>、<code>dict</code>、<code>str</code>等<code>Iterable</code>变成<code>Iterator</code>可以使用<code>iter()</code>函数：</p><br><pre><code>&gt;&gt;&gt; isinstance(iter([]), Iterator)<br>True<br>&gt;&gt;&gt; isinstance(iter(&#39;abc&#39;), Iterator)<br>True<br></code></pre><p>你可能会问，为什么<code>list</code>、<code>dict</code>、<code>str</code>等数据类型不是<code>Iterator</code>？</p><br><p>这是因为Python的<code>Iterator</code>对象表示的是一个数据流，Iterator对象可以被<code>next()</code>函数调用并不断返回下一个数据，直到没有数据时抛出<code>StopIteration</code>错误。可以把这个数据流看做是一个有序序列，但我们却不能提前知道序列的长度，只能不断通过<code>next()</code>函数实现按需计算下一个数据，所以<code>Iterator</code>的计算是惰性的，只有在需要返回下一个数据时它才会计算。</p><br><p><code>Iterator</code>甚至可以表示一个无限大的数据流，例如全体自然数。而使用list是永远不可能存储全体自然数的。</p><br><h3 id="-">小结</h3><br><p>凡是可作用于<code>for</code>循环的对象都是<code>Iterable</code>类型；</p><br><p>凡是可作用于<code>next()</code>函数的对象都是<code>Iterator</code>类型，它们表示一个惰性计算的序列；</p><br><p>集合数据类型如<code>list</code>、<code>dict</code>、<code>str</code>等是<code>Iterable</code>但不是<code>Iterator</code>，不过可以通过<code>iter()</code>函数获得一个<code>Iterator</code>对象。</p><br><p>Python的<code>for</code>循环本质上就是通过不断调用<code>next()</code>函数实现的，例如：</p><br><pre><code>for x in [1, 2, 3, 4, 5]:<br>    pass<br></code></pre><p>实际上完全等价于：</p><br><pre><code># 首先获得Iterator对象:<br>it = iter([1, 2, 3, 4, 5])<br># 循环:<br>while True:<br>    try:<br>        # 获得下一个值:<br>        x = next(it)<br>    except StopIteration:<br>        # 遇到StopIteration就退出循环<br>        break<br></code></pre><h3 id="-">参考源码</h3><br><p><a href="https://github.com/michaelliao/learn-python3/blob/master/samples/advance/do_iter.py" target="_blank" rel="external">do_iter.py</a></p><br><br>    </div>

<hr>
<p><strong>版权声明</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本网站如未注明转载，均由<a href="https://fengqingxiuyi.github.io/">青峰</a>创作并维护；本网站采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。转载请注明作者及出处。</p>
<p>本文永久链接：<a href="https://fengqingxiuyi.github.io/2016/11/10/Python/Iterable和Iterator的区别/">https://fengqingxiuyi.github.io/2016/11/10/Python/Iterable和Iterator的区别/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;转载自教程&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/00143178254193589df9c612d2449618ea460e7a
    
    </summary>
    
      <category term="Python" scheme="https://fengqingxiuyi.github.io/categories/Python/"/>
    
    
      <category term="Python基础" scheme="https://fengqingxiuyi.github.io/tags/Python%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>ShowJoy开发记录</title>
    <link href="https://fengqingxiuyi.github.io/2016/11/02/ShowJoy/ShowJoy%E5%BC%80%E5%8F%91%E8%AE%B0%E5%BD%95/"/>
    <id>https://fengqingxiuyi.github.io/2016/11/02/ShowJoy/ShowJoy开发记录/</id>
    <published>2016-11-02T08:05:15.000Z</published>
    <updated>2016-11-10T07:59:26.000Z</updated>
    
    <content type="html"><![CDATA[<font color="red"><strong><em>未编写部分的地方都使用了 // TODO 来进行占位。</em></strong></font>

<p>主要包括：常用命令、注意事项、杂七杂八。</p>
<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="Gradle"><a href="#Gradle" class="headerlink" title="Gradle"></a>Gradle</h2><p>命令输入位置：AndroidStudio-Terminal</p>
<h3 id="gradle-–stop"><a href="#gradle-–stop" class="headerlink" title="gradle –stop"></a>gradle –stop</h3><p>标题中的命令错误：应该为<code>gradle --stop</code>，注意是两个<code>-</code>符号！！！</p>
<p>作用：可以快速停止 gradle 启动的进程。</p>
<h3 id="gradle-shopandroid-dependencies-gt-dependencies-txt"><a href="#gradle-shopandroid-dependencies-gt-dependencies-txt" class="headerlink" title="gradle shopandroid:dependencies &gt; dependencies.txt"></a>gradle shopandroid:dependencies &gt; dependencies.txt</h3><h4 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h4><p>shopandroid：想要查找依赖关系的模块名（ModuleName）</p>
<p>dependencies.txt：要将输出的依赖关系保存的文件位置，包括文件名，如果只写文件名，表示保存在当前目录下的 该文件 中。</p>
<h4 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h4><p>生成<code>shopandroid模块</code>的依赖关系，并保存在当前文件夹下的<code>dependencies.txt</code>中。</p>
<h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ gradle shopandroid:dependencies &gt; dependencies.txt</div><div class="line">$ <span class="built_in">pwd</span></div><div class="line">/Volumes/MAIN/qingfeng/Workspace/ShopAndroid</div><div class="line">$</div></pre></td></tr></table></figure>
<p>说明<code>dependencies.txt</code>文件的保存位置是：/Volumes/MAIN/qingfeng/Workspace/ShopAndroid/dependencies.txt</p>
<h2 id="Adb"><a href="#Adb" class="headerlink" title="Adb"></a>Adb</h2><h3 id="adb-shell-dumpsys-activity-grep-mFocusedActivity"><a href="#adb-shell-dumpsys-activity-grep-mFocusedActivity" class="headerlink" title="adb shell dumpsys activity | grep mFocusedActivity"></a>adb shell dumpsys activity | grep mFocusedActivity</h3><p>作用：获取真机显示页面的Activity的名称。</p>
<h3 id="adb-logcat-d-gt-logcat-txt"><a href="#adb-logcat-d-gt-logcat-txt" class="headerlink" title="adb logcat -d &gt; logcat.txt"></a>adb logcat -d &gt; logcat.txt</h3><p>作用：保存打印的logcat信息到当前目录下的logcat.txt文件中。</p>
<h3 id="adb-pull-sdcard-shop-crash"><a href="#adb-pull-sdcard-shop-crash" class="headerlink" title="adb pull sdcard/shop-crash"></a>adb pull sdcard/shop-crash</h3><p>作用：将SD卡根目录下的shop-crash文件夹导出到当前目录中，当然也可以导出文件。</p>
<p>例子：导出手机中的shop-crash文件：打开终端后，首先进入电脑桌面目录，即cd /Desktop，然后使用上述命令回车即可。</p>
<h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><h3 id="find"><a href="#find" class="headerlink" title="find"></a>find</h3><p>使用格式：find [指定查找目录] [查找规则] [查找完后执行的action]</p>
<p>相关网址：</p>
<ol>
<li><a href="http://blog.chinaunix.net/uid-24648486-id-2998767" target="_blank" rel="external">linux下find（文件查找）命令的用法总结 </a></li>
<li><a href="http://www.cnblogs.com/wanqieddy/archive/2011/06/09/2076785.html" target="_blank" rel="external">Linux find 用法示例</a></li>
</ol>
<h4 id="find-name-“-”-xargs-rm-rf"><a href="#find-name-“-”-xargs-rm-rf" class="headerlink" title="find . -name “._*” |xargs rm -rf"></a>find . -name “._*” |xargs rm -rf</h4><p>作用：快速删除当前目录下包含以<code>._</code>开头的所有文件</p>
<p>解释：</p>
<ol>
<li>第一个<code>.</code>符号代表的是当前路径，所以该位置参数的意义是路径名；</li>
<li><code>-name</code>符号代表的是根据文件名精确查找，如果想要忽略大小写，可以改为<code>-iname</code>；</li>
<li><code>&quot;._*&quot;</code>符号代表的是找到所有以<code>._</code>开头的文件，<code>*</code>符号是通配符，所以该位置参数的意义是要寻找的文件的过滤规则；</li>
<li><code>rm -rf</code>符号代表的是强制删除。</li>
</ol>
<h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><h2 id="混淆文件位置"><a href="#混淆文件位置" class="headerlink" title="混淆文件位置"></a>混淆文件位置</h2><p>以 CharityShopAndroid 项目为例：混淆文件<font color="red">仅</font>在主模块（charityshopandroid）的根目录下，如果是debug状态下，使用的混淆文件是debug_proguard-rules.pro；如果是release状态下，使用的混淆文件是proguard-rules.pro。</p>
<h2 id="mapping-txt"><a href="#mapping-txt" class="headerlink" title="mapping.txt"></a>mapping.txt</h2><p>在友盟中查看错误日志时，因为混淆了，所以我们需要找到对应版本的mapping文件来解读，但是有时候由于在版本迭代过程中更改内容不是特别多，所以重新切出对应版本的release分支，这样会导致我们在Jenkins查找指定版本的mapping文件时，无法立刻找到。对于此问题，我们需要做以下操作：</p>
<ol>
<li>在Gitlab上找到指定版本对应的release分支，并记住推送到服务器的时间；</li>
<li>在Jenkins中找到该release分支项目中，在构建历史中根据之前记住的服务器时间来查找。</li>
</ol>
<p>实际案例：ShopAndroid项目的1.3.0-1.3.5版本都是在release/1.3.0分支上构建的。</p>
<p>Gitlab地址：<a href="http://git.showjoy.net/shopandroid/shopandroid/commits/release/1.3.0" target="_blank" rel="external">http://git.showjoy.net/shopandroid/shopandroid/commits/release/1.3.0</a></p>
<p>Jenkins地址：<a href="https://wireless-build.showjoy.net/view/达人店/job/ShopAndroid-release-1.3.0/" target="_blank" rel="external">https://wireless-build.showjoy.net/view/达人店/job/ShopAndroid-release-1.3.0/</a></p>
<h2 id="Instant-Run"><a href="#Instant-Run" class="headerlink" title="Instant Run"></a>Instant Run</h2><p>因为 Instant Run 不支持混淆，所以在调试运行的时候，生成APK内包含的方法数就很有很大几率超过65536。</p>
<p>这个时候可以在 AndroidStudio 的设置页面关闭 Instant Run ，即不勾选enable，再调试运行，就会混淆代码，从而减少方法数。</p>
<p>如果即使混淆了，方法数还是超过65536，这个时候，就需要dex分包处理了。</p>
<h2 id="修改子模块流程"><a href="#修改子模块流程" class="headerlink" title="修改子模块流程"></a>修改子模块流程</h2><ol>
<li>子模块新拉分支A</li>
<li>子模块依赖改为本地模块</li>
<li>编写代码，自测成功</li>
<li>上传代码到分支A</li>
<li>告诉评审人员 分支A名称 进行评审</li>
<li>评审有问题，回到第3步</li>
<li>评审通过后，将代码<font color="red">合并</font>到master分支，而不是<font color="blue">拉取</font>（合并的方法是，先合并master代码到分支A, 自测成功。再将分支A的代码合并到master）</li>
<li>修改master分支的版本，Jenkins项目构建，打tag并push</li>
</ol>
<h2 id="Gradle-Compile"><a href="#Gradle-Compile" class="headerlink" title="Gradle - Compile"></a>Gradle - Compile</h2><h3 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h3><p>比较下面两个语句块的不同</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">compile (<span class="string">'com.showjoy.shop:common:1.3.4'</span>)</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">compile (<span class="string">'com.showjoy.shop:common:1.3.4'</span>) &#123;</div><div class="line">    transitive <span class="keyword">false</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="简要解释"><a href="#简要解释" class="headerlink" title="简要解释"></a>简要解释</h4><ol>
<li>com.showjoy.shop：即groupId：是项目或者组织的唯一标志，并且配置时生成的路径也是由此生成，如com.showjoy.shop生成的相对路径为：/com/showjoy/shop；</li>
<li>common：即artifactId：项目的通用名称；</li>
<li>1.3.4：即version：项目的版本。</li>
</ol>
<p>上述解释内容都是配置在maven仓库的pom配置文件中的，此模块配置文件地址：<a href="http://192.168.0.62:8081/repository/maven-releases/com/showjoy/shop/common/1.3.4/common-1.3.4.pom，因为是内网才可以访问的，这里我就展示一下主要部分：" target="_blank" rel="external">http://192.168.0.62:8081/repository/maven-releases/com/showjoy/shop/common/1.3.4/common-1.3.4.pom，因为是内网才可以访问的，这里我就展示一下主要部分：</a></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.showjoy.shop<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>aar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>shopandroid_common<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Uploads all artifacts belonging to configuration ':shopandroid_common:archives'<span class="tag">&lt;/<span class="name">description</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.showjoy.android<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>storage<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.showjoy.network<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>library<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.14<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>support-annotations<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.android.support<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>utils-log<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.showjoy.android<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        ...</div><div class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure>
<p>备注：exclusions是可选的，在上述文件中可知：storage模块没有排除任何依赖；library模块排除了support-annotations模块和utils-log模块。</p>
<p>字段详细解释可以查看该网址：<a href="http://zyl.iteye.com/blog/41754" target="_blank" rel="external">http://zyl.iteye.com/blog/41754</a></p>
<p>字段详细解释：<font color="red"><strong><em>// TODO</em></strong></font></p>
<h3 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h3><p>前者：当我们依赖了common模块的时候，还会传递依赖common所依赖的模块。</p>
<p>后者：当我们依赖了common模块的时候，不会传递依赖common所依赖的<font color="red">所有</font>模块。</p>
<h3 id="疑问"><a href="#疑问" class="headerlink" title="疑问"></a>疑问</h3><p>如果我们并不想要排除所有的common所依赖的模块，只想要依赖排除<font color="red">某个或者某几个</font>common所依赖的模块，又该如何呢？</p>
<h3 id="解答-1"><a href="#解答-1" class="headerlink" title="解答"></a>解答</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">compile (<span class="string">'com.showjoy.shop:common:1.3.4'</span>) &#123;</div><div class="line">    exclude group: <span class="string">'com.showjoy.shop'</span>, <span class="keyword">module</span>: <span class="string">'viewgroup'</span></div><div class="line">    exclude group: <span class="string">'com.showjoy.shop'</span>, <span class="keyword">module</span>: <span class="string">'share'</span></div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>如上所示：</p>
<p>如果想要排除common依赖的viewgroup模块，只需要写这么一句话就行了：exclude group: ‘com.showjoy.shop’, module: ‘viewgroup’；</p>
<p>如果还想要排除share，也可以依样画葫芦，<font color="red">注意填写正确的groupId和moduleName</font>。</p>
<h3 id="为什么要排除依赖"><a href="#为什么要排除依赖" class="headerlink" title="为什么要排除依赖"></a>为什么要排除依赖</h3><p>我们从上往下看：</p>
<ol>
<li>对于某一个模块，一个项目只允许存在一个版本；</li>
<li>一个项目可能依赖很多个模块，每个模块可能依赖相同的子模块，但是版本号可能不同；</li>
<li>如果不管不顾，就会有版本冲突，因为第1点，所以需要排除依赖，最终只留下一个版本。</li>
</ol>
<h1 id="杂七杂八"><a href="#杂七杂八" class="headerlink" title="杂七杂八"></a>杂七杂八</h1><p>KPI中要求的输出文档位置：<a href="http://git.showjoy.net/showjoywireless/showjoywireless_doc/tree/master/android" target="_blank" rel="external">http://git.showjoy.net/showjoywireless/showjoywireless_doc/tree/master/android</a></p>
<hr>
<p><strong>版权声明</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本网站如未注明转载，均由<a href="https://fengqingxiuyi.github.io/">青峰</a>创作并维护；本网站采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。转载请注明作者及出处。</p>
<p>本文永久链接：<a href="https://fengqingxiuyi.github.io/2016/11/02/ShowJoy/ShowJoy开发记录/">https://fengqingxiuyi.github.io/2016/11/02/ShowJoy/ShowJoy开发记录/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;font color=&quot;red&quot;&gt;&lt;strong&gt;&lt;em&gt;未编写部分的地方都使用了 // TODO 来进行占位。&lt;/em&gt;&lt;/strong&gt;&lt;/font&gt;

&lt;p&gt;主要包括：常用命令、注意事项、杂七杂八。&lt;/p&gt;
&lt;h1 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; cl
    
    </summary>
    
      <category term="ShowJoy" scheme="https://fengqingxiuyi.github.io/categories/ShowJoy/"/>
    
    
  </entry>
  
  <entry>
    <title>输入法的显示与隐藏</title>
    <link href="https://fengqingxiuyi.github.io/2016/10/05/Android/Wiki/%E8%BE%93%E5%85%A5%E6%B3%95%E7%9A%84%E6%98%BE%E7%A4%BA%E4%B8%8E%E9%9A%90%E8%97%8F/"/>
    <id>https://fengqingxiuyi.github.io/2016/10/05/Android/Wiki/输入法的显示与隐藏/</id>
    <published>2016-10-05T01:57:21.000Z</published>
    <updated>2016-10-05T02:00:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>注：本文属于工具类文章，可以直接使用；本文主要介绍关于<code>输入法的显示与隐藏</code>。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> android.content.Context;</div><div class="line"><span class="keyword">import</span> android.view.inputmethod.InputMethodManager;</div><div class="line"><span class="keyword">import</span> android.widget.EditText;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by qingfeng on 16/9/19.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InputMethodUtils</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 切换软键盘的状态</div><div class="line">     * 如当前为收起变为弹出,若当前为弹出变为收起</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">toggleInput</span><span class="params">(EditText edittext)</span> </span>&#123;</div><div class="line">        InputMethodManager inputMethodManager = (InputMethodManager)</div><div class="line">                edittext.getContext().getSystemService(Context.INPUT_METHOD_SERVICE);</div><div class="line">        inputMethodManager.toggleSoftInput(<span class="number">0</span>, InputMethodManager.HIDE_NOT_ALWAYS);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 强制隐藏输入法键盘</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">hideInput</span><span class="params">(EditText edittext)</span> </span>&#123;</div><div class="line">        InputMethodManager inputMethodManager = (InputMethodManager)</div><div class="line">                edittext.getContext().getSystemService(Context.INPUT_METHOD_SERVICE);</div><div class="line">        <span class="keyword">if</span> (inputMethodManager.isActive()) &#123;</div><div class="line">            inputMethodManager.hideSoftInputFromWindow(edittext.getWindowToken(), <span class="number">0</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 强制显示输入法键盘</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">showInput</span><span class="params">(EditText edittext)</span> </span>&#123;</div><div class="line">        InputMethodManager inputMethodManager = (InputMethodManager)</div><div class="line">                edittext.getContext().getSystemService(Context.INPUT_METHOD_SERVICE);</div><div class="line">        inputMethodManager.showSoftInput(edittext, InputMethodManager.SHOW_FORCED);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 输入法是否显示</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isShow</span><span class="params">(EditText edittext)</span> </span>&#123;</div><div class="line">        <span class="keyword">boolean</span> bool = <span class="keyword">false</span>;</div><div class="line">        InputMethodManager inputMethodManager = (InputMethodManager)</div><div class="line">                edittext.getContext().getSystemService(Context.INPUT_METHOD_SERVICE);</div><div class="line">        <span class="keyword">if</span> (inputMethodManager.isActive()) &#123;</div><div class="line">            bool = <span class="keyword">true</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> bool;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<p><strong>版权声明</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本网站如未注明转载，均由<a href="https://fengqingxiuyi.github.io/">青峰</a>创作并维护；本网站采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。转载请注明作者及出处。</p>
<p>本文永久链接：<a href="https://fengqingxiuyi.github.io/2016/10/05/Android/Wiki/输入法的显示与隐藏/">https://fengqingxiuyi.github.io/2016/10/05/Android/Wiki/输入法的显示与隐藏/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;注：本文属于工具类文章，可以直接使用；本文主要介绍关于&lt;code&gt;输入法的显示与隐藏&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line
    
    </summary>
    
      <category term="Android" scheme="https://fengqingxiuyi.github.io/categories/Android/"/>
    
    
      <category term="Wiki" scheme="https://fengqingxiuyi.github.io/tags/Wiki/"/>
    
  </entry>
  
  <entry>
    <title>复制粘贴文本的三种类型</title>
    <link href="https://fengqingxiuyi.github.io/2016/10/05/Android/Wiki/%E5%A4%8D%E5%88%B6%E7%B2%98%E8%B4%B4%E6%96%87%E6%9C%AC%E7%9A%84%E4%B8%89%E7%A7%8D%E7%B1%BB%E5%9E%8B/"/>
    <id>https://fengqingxiuyi.github.io/2016/10/05/Android/Wiki/复制粘贴文本的三种类型/</id>
    <published>2016-10-05T01:56:21.000Z</published>
    <updated>2016-10-05T01:59:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>注：本文属于工具类文章，可以直接使用；本文主要介绍<code>复制粘贴文本的三种类型</code>。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> android.content.ClipData;</div><div class="line"><span class="keyword">import</span> android.content.ClipDescription;</div><div class="line"><span class="keyword">import</span> android.content.ClipboardManager;</div><div class="line"><span class="keyword">import</span> android.content.Context;</div><div class="line"><span class="keyword">import</span> android.content.Intent;</div><div class="line"><span class="keyword">import</span> android.net.Uri;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by qingfeng on 16/9/8.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SHTextUtils</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 复制 -&gt; 类型一: text</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">copy</span><span class="params">(Context context, String text)</span> </span>&#123;</div><div class="line">        ClipboardManager clipboard = (ClipboardManager) context.getSystemService(Context.CLIPBOARD_SERVICE);</div><div class="line">        ClipData textCd = ClipData.newPlainText(<span class="string">"text"</span>, text);</div><div class="line">        clipboard.setPrimaryClip(textCd);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 粘贴 -&gt; 类型一: text</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> CharSequence <span class="title">pasteText</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        ClipboardManager clipboard = (ClipboardManager) context.getSystemService(Context.CLIPBOARD_SERVICE);</div><div class="line">        <span class="keyword">if</span> (clipboard.getPrimaryClipDescription().hasMimeType(ClipDescription.MIMETYPE_TEXT_PLAIN)) &#123;</div><div class="line">            ClipData cdText = clipboard.getPrimaryClip();</div><div class="line">            <span class="comment">// 此处是 text</span></div><div class="line">            ClipData.Item item = cdText.getItemAt(<span class="number">0</span>);</div><div class="line">            <span class="keyword">return</span> item.getText();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 复制 -&gt; 类型二: Uri</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">copy</span><span class="params">(Context context, Uri uri)</span> </span>&#123;</div><div class="line">        ClipboardManager clipboard = (ClipboardManager) context.getSystemService(Context.CLIPBOARD_SERVICE);</div><div class="line">        ClipData clipUri = ClipData.newUri(context.getContentResolver(), <span class="string">"Uri"</span>, uri);</div><div class="line">        clipboard.setPrimaryClip(clipUri);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 粘贴 -&gt; 类型二: Uri</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Uri <span class="title">pasteUri</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        ClipboardManager clipboard = (ClipboardManager) context.getSystemService(Context.CLIPBOARD_SERVICE);</div><div class="line">        <span class="keyword">if</span> (clipboard.getPrimaryClipDescription().hasMimeType(ClipDescription.MIMETYPE_TEXT_URILIST)) &#123;</div><div class="line">            ClipData cdUri = clipboard.getPrimaryClip();</div><div class="line">            <span class="comment">// 此处是 Uri</span></div><div class="line">            ClipData.Item item = cdUri.getItemAt(<span class="number">0</span>);</div><div class="line">            <span class="keyword">return</span> item.getUri();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 复制 -&gt; 类型三: Intent</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">copy</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</div><div class="line">        ClipboardManager clipboard = (ClipboardManager) context.getSystemService(Context.CLIPBOARD_SERVICE);</div><div class="line">        ClipData clipIntent = ClipData.newIntent(<span class="string">"Intent"</span>, intent);</div><div class="line">        clipboard.setPrimaryClip(clipIntent);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 粘贴 -&gt; 类型三: Intent</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Intent <span class="title">pasteIntent</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        ClipboardManager clipboard = (ClipboardManager) context.getSystemService(Context.CLIPBOARD_SERVICE);</div><div class="line">        <span class="keyword">if</span> (clipboard.getPrimaryClipDescription().hasMimeType(ClipDescription.MIMETYPE_TEXT_INTENT)) &#123;</div><div class="line">            ClipData cdIntent = clipboard.getPrimaryClip();</div><div class="line">            <span class="comment">// 此处是 Intent</span></div><div class="line">            ClipData.Item item = cdIntent.getItemAt(<span class="number">0</span>);</div><div class="line">            <span class="keyword">return</span> item.getIntent();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<p><strong>版权声明</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本网站如未注明转载，均由<a href="https://fengqingxiuyi.github.io/">青峰</a>创作并维护；本网站采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。转载请注明作者及出处。</p>
<p>本文永久链接：<a href="https://fengqingxiuyi.github.io/2016/10/05/Android/Wiki/复制粘贴文本的三种类型/">https://fengqingxiuyi.github.io/2016/10/05/Android/Wiki/复制粘贴文本的三种类型/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;注：本文属于工具类文章，可以直接使用；本文主要介绍&lt;code&gt;复制粘贴文本的三种类型&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line
    
    </summary>
    
      <category term="Android" scheme="https://fengqingxiuyi.github.io/categories/Android/"/>
    
    
      <category term="Wiki" scheme="https://fengqingxiuyi.github.io/tags/Wiki/"/>
    
  </entry>
  
  <entry>
    <title>摄像头是否可用</title>
    <link href="https://fengqingxiuyi.github.io/2016/10/05/Android/Wiki/%E6%91%84%E5%83%8F%E5%A4%B4%E6%98%AF%E5%90%A6%E5%8F%AF%E7%94%A8/"/>
    <id>https://fengqingxiuyi.github.io/2016/10/05/Android/Wiki/摄像头是否可用/</id>
    <published>2016-10-05T01:52:21.000Z</published>
    <updated>2016-10-05T02:03:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>注：本文属于工具类文章，可以直接使用；本文主要介绍如何判断<code>摄像头是否可用</code>，并兼容处理MX5的某些bug。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> android.hardware.Camera;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by qingfeng on 16/9/19.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CameraUtils</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 判断摄像头是否可用</div><div class="line">     *</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isCameraCanUse</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">boolean</span> canUse = <span class="keyword">true</span>;</div><div class="line"></div><div class="line">        Camera mCamera = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            mCamera = Camera.open();</div><div class="line">            <span class="comment">// setParameters 是针对魅族MX5 做的。MX5 通过Camera.open() 拿到的Camera</span></div><div class="line">            <span class="comment">// 对象不为null</span></div><div class="line">            Camera.Parameters mParameters = mCamera.getParameters();</div><div class="line">            mCamera.setParameters(mParameters);</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            canUse = <span class="keyword">false</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (mCamera != <span class="keyword">null</span>) &#123;</div><div class="line">            mCamera.release();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> canUse;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<p><strong>版权声明</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本网站如未注明转载，均由<a href="https://fengqingxiuyi.github.io/">青峰</a>创作并维护；本网站采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。转载请注明作者及出处。</p>
<p>本文永久链接：<a href="https://fengqingxiuyi.github.io/2016/10/05/Android/Wiki/摄像头是否可用/">https://fengqingxiuyi.github.io/2016/10/05/Android/Wiki/摄像头是否可用/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;注：本文属于工具类文章，可以直接使用；本文主要介绍如何判断&lt;code&gt;摄像头是否可用&lt;/code&gt;，并兼容处理MX5的某些bug。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;
    
    </summary>
    
      <category term="Android" scheme="https://fengqingxiuyi.github.io/categories/Android/"/>
    
    
      <category term="Wiki" scheme="https://fengqingxiuyi.github.io/tags/Wiki/"/>
    
  </entry>
  
  <entry>
    <title>文件的基本操作</title>
    <link href="https://fengqingxiuyi.github.io/2016/10/05/Android/Wiki/%E6%96%87%E4%BB%B6%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    <id>https://fengqingxiuyi.github.io/2016/10/05/Android/Wiki/文件的基本操作/</id>
    <published>2016-10-05T01:38:21.000Z</published>
    <updated>2016-10-05T02:01:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>注：本文属于工具类文章，可以直接使用；本文主要封装了一些<code>文件操作的基本方法</code>，包括创建、删除、获取文件大小等。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> android.content.Context;</div><div class="line"><span class="keyword">import</span> android.graphics.Bitmap;</div><div class="line"><span class="keyword">import</span> android.os.Environment;</div><div class="line"><span class="keyword">import</span> android.util.Log;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.File;</div><div class="line"><span class="keyword">import</span> java.io.FileOutputStream;</div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 主要封装了一些文件操作的基本方法，包括创建、删除、获取文件大小等。</div><div class="line"> *</div><div class="line"> * Created by qingfeng on 16/9/9.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileUtils</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"FileUtils"</span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 检查是否存在SD卡</div><div class="line">     *</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">hasSdcard</span><span class="params">()</span> </span>&#123;</div><div class="line">        String state = Environment.getExternalStorageState();</div><div class="line">        <span class="keyword">if</span> (state.equals(Environment.MEDIA_MOUNTED)) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 创建目录</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> context</div><div class="line">     * <span class="doctag">@param</span> dirName 文件夹名称</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> File <span class="title">createFileDir</span><span class="params">(Context context, String dirName)</span> </span>&#123;</div><div class="line">        String filePath;</div><div class="line">        <span class="comment">// 如SD卡已存在，则存储；反之存在data目录下</span></div><div class="line">        <span class="keyword">if</span> (hasSdcard()) &#123;</div><div class="line">            <span class="comment">// SD卡路径</span></div><div class="line">            filePath = Environment.getExternalStorageDirectory() + File.separator + dirName;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            filePath = context.getCacheDir().getPath() + File.separator + dirName;</div><div class="line">        &#125;</div><div class="line">        File destDir = <span class="keyword">new</span> File(filePath);</div><div class="line">        <span class="keyword">if</span> (!destDir.exists()) &#123;</div><div class="line">            <span class="keyword">boolean</span> isCreate = destDir.mkdirs();</div><div class="line">            Log.i(TAG, filePath + <span class="string">" has created. "</span> + isCreate);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> destDir;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 删除文件（若为目录，则递归删除子目录和文件）</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> file</div><div class="line">     * <span class="doctag">@param</span> delThisPath true代表删除参数指定file，false代表保留参数指定file</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">delFile</span><span class="params">(File file, <span class="keyword">boolean</span> delThisPath)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (!file.exists()) &#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (file.isDirectory()) &#123;</div><div class="line">            File[] subFiles = file.listFiles();</div><div class="line">            <span class="keyword">if</span> (subFiles != <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="keyword">int</span> num = subFiles.length;</div><div class="line">                <span class="comment">// 删除子目录和文件</span></div><div class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</div><div class="line">                    delFile(subFiles[i], <span class="keyword">true</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (delThisPath) &#123;</div><div class="line">            file.delete();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 获取文件大小，单位为byte（若为目录，则包括所有子目录和文件）</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> file</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">getFileSize</span><span class="params">(File file)</span> </span>&#123;</div><div class="line">        <span class="keyword">long</span> size = <span class="number">0</span>;</div><div class="line">        <span class="keyword">if</span> (file.exists()) &#123;</div><div class="line">            <span class="keyword">if</span> (file.isDirectory()) &#123;</div><div class="line">                File[] subFiles = file.listFiles();</div><div class="line">                <span class="keyword">if</span> (subFiles != <span class="keyword">null</span>) &#123;</div><div class="line">                    <span class="keyword">int</span> num = subFiles.length;</div><div class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</div><div class="line">                        size += getFileSize(subFiles[i]);</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                size += file.length();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> size;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 保存Bitmap到指定目录</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> dir 目录</div><div class="line">     * <span class="doctag">@param</span> fileName 文件名</div><div class="line">     * <span class="doctag">@param</span> bitmap</div><div class="line">     * <span class="doctag">@throws</span> IOException</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">saveBitmap</span><span class="params">(File dir, String fileName, Bitmap bitmap)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (bitmap == <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        File file = <span class="keyword">new</span> File(dir, fileName);</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            file.createNewFile();</div><div class="line">            FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(file);</div><div class="line">            bitmap.compress(Bitmap.CompressFormat.JPEG, <span class="number">100</span>, fos);</div><div class="line">            fos.flush();</div><div class="line">            fos.close();</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 判断某目录下文件是否存在</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> dir 目录</div><div class="line">     * <span class="doctag">@param</span> fileName 文件名</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isFileExists</span><span class="params">(File dir, String fileName)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> File(dir, fileName).exists();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<p><strong>版权声明</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本网站如未注明转载，均由<a href="https://fengqingxiuyi.github.io/">青峰</a>创作并维护；本网站采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。转载请注明作者及出处。</p>
<p>本文永久链接：<a href="https://fengqingxiuyi.github.io/2016/10/05/Android/Wiki/文件的基本操作/">https://fengqingxiuyi.github.io/2016/10/05/Android/Wiki/文件的基本操作/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;注：本文属于工具类文章，可以直接使用；本文主要封装了一些&lt;code&gt;文件操作的基本方法&lt;/code&gt;，包括创建、删除、获取文件大小等。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre
    
    </summary>
    
      <category term="Android" scheme="https://fengqingxiuyi.github.io/categories/Android/"/>
    
    
      <category term="Wiki" scheme="https://fengqingxiuyi.github.io/tags/Wiki/"/>
    
  </entry>
  
  <entry>
    <title>scrollbarStyle详解</title>
    <link href="https://fengqingxiuyi.github.io/2016/10/04/Android/View/ScrollView/scrollbarStyle%E8%AF%A6%E8%A7%A3/"/>
    <id>https://fengqingxiuyi.github.io/2016/10/04/Android/View/ScrollView/scrollbarStyle详解/</id>
    <published>2016-10-04T10:20:21.000Z</published>
    <updated>2016-10-04T10:36:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>android:scrollbarStyle属性及滚动条和分割线覆盖问题</p>
<p>android:scrollbarStyle可以定义滚动条的样式和位置，可选值有insideOverlay、insideInset、outsideOverlay、outsideInset四种。</p>
<p>其中inside和outside分别表示是否在view的padding区域内，overlay和inset表示覆盖在view上或是插在view后面，所以四种值分别表示：</p>
<p>insideOverlay：默认值，表示在padding区域内并且覆盖在view上</p>
<p>insideInset：表示在padding区域内并且插入在view后面</p>
<p>outsideOverlay：表示在padding区域外并且覆盖在view上，推荐这个</p>
<p>outsideInset：表示在padding区域外并且插入在view后面</p>
<p>分别对应效果如下图：<img src="../../../../../../../images/Android/View/ScrollView/scrollbarStyle详解.jpg" alt="scrollbarStyle详解"></p>
<hr>
<p><strong>版权声明</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本网站如未注明转载，均由<a href="https://fengqingxiuyi.github.io/">青峰</a>创作并维护；本网站采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。转载请注明作者及出处。</p>
<p>本文永久链接：<a href="https://fengqingxiuyi.github.io/2016/10/04/Android/View/ScrollView/scrollbarStyle详解/">https://fengqingxiuyi.github.io/2016/10/04/Android/View/ScrollView/scrollbarStyle详解/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;android:scrollbarStyle属性及滚动条和分割线覆盖问题&lt;/p&gt;
&lt;p&gt;android:scrollbarStyle可以定义滚动条的样式和位置，可选值有insideOverlay、insideInset、outsideOverlay、outsideInset
    
    </summary>
    
      <category term="Android" scheme="https://fengqingxiuyi.github.io/categories/Android/"/>
    
    
      <category term="View" scheme="https://fengqingxiuyi.github.io/tags/View/"/>
    
  </entry>
  
  <entry>
    <title>设置滚动条样式</title>
    <link href="https://fengqingxiuyi.github.io/2016/10/04/Android/View/ScrollView/%E8%AE%BE%E7%BD%AE%E6%BB%9A%E5%8A%A8%E6%9D%A1%E6%A0%B7%E5%BC%8F/"/>
    <id>https://fengqingxiuyi.github.io/2016/10/04/Android/View/ScrollView/设置滚动条样式/</id>
    <published>2016-10-04T10:19:21.000Z</published>
    <updated>2016-10-04T10:20:46.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ScrollView</span></span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">    <span class="attr">android:layout_marginBottom</span>=<span class="string">"30dp"</span></div><div class="line">    <span class="attr">android:layout_marginTop</span>=<span class="string">"10dp"</span></div><div class="line">    <span class="attr">android:fadeScrollbars</span>=<span class="string">"false"</span></div><div class="line">    <span class="attr">android:paddingLeft</span>=<span class="string">"46dp"</span></div><div class="line">    <span class="attr">android:paddingRight</span>=<span class="string">"46dp"</span></div><div class="line">    <span class="attr">android:scrollbarSize</span>=<span class="string">"2dp"</span></div><div class="line">    <span class="attr">android:scrollbarStyle</span>=<span class="string">"outsideOverlay"</span></div><div class="line">    <span class="attr">android:scrollbarThumbVertical</span>=<span class="string">"@color/white"</span>/&gt;</div></pre></td></tr></table></figure>
<p>scrollbarSize: 设置滚动条大小，垂直时指宽度，水平时指高度</p>
<p>scrollbarStyle: 设置滚动条位置，详见<a href="../scrollbarStyle详解/index.html">scrollbarStyle详解</a></p>
<p>scrollbarThumbVertical: 设置滚动条颜色</p>
<hr>
<p><strong>版权声明</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本网站如未注明转载，均由<a href="https://fengqingxiuyi.github.io/">青峰</a>创作并维护；本网站采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。转载请注明作者及出处。</p>
<p>本文永久链接：<a href="https://fengqingxiuyi.github.io/2016/10/04/Android/View/ScrollView/设置滚动条样式/">https://fengqingxiuyi.github.io/2016/10/04/Android/View/ScrollView/设置滚动条样式/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;
    
    </summary>
    
      <category term="Android" scheme="https://fengqingxiuyi.github.io/categories/Android/"/>
    
    
      <category term="View" scheme="https://fengqingxiuyi.github.io/tags/View/"/>
    
  </entry>
  
  <entry>
    <title>永久显示滚动条</title>
    <link href="https://fengqingxiuyi.github.io/2016/10/04/Android/View/ScrollView/%E6%B0%B8%E4%B9%85%E6%98%BE%E7%A4%BA%E6%BB%9A%E5%8A%A8%E6%9D%A1/"/>
    <id>https://fengqingxiuyi.github.io/2016/10/04/Android/View/ScrollView/永久显示滚动条/</id>
    <published>2016-10-04T10:17:21.000Z</published>
    <updated>2016-10-04T10:28:00.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ScrollView</span></span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">    <span class="attr">android:layout_marginBottom</span>=<span class="string">"30dp"</span></div><div class="line">    <span class="attr">android:layout_marginTop</span>=<span class="string">"10dp"</span></div><div class="line">    <span class="attr">android:fadeScrollbars</span>=<span class="string">"false"</span></div><div class="line">    <span class="attr">android:paddingLeft</span>=<span class="string">"46dp"</span></div><div class="line">    <span class="attr">android:paddingRight</span>=<span class="string">"46dp"</span></div><div class="line">    <span class="attr">android:scrollbarSize</span>=<span class="string">"2dp"</span></div><div class="line">    <span class="attr">android:scrollbarStyle</span>=<span class="string">"outsideOverlay"</span></div><div class="line">    <span class="attr">android:scrollbarThumbVertical</span>=<span class="string">"@color/white"</span>/&gt;</div></pre></td></tr></table></figure>
<p>android:fadeScrollbars=”false”: 永久显示滚动条</p>
<hr>
<p><strong>版权声明</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本网站如未注明转载，均由<a href="https://fengqingxiuyi.github.io/">青峰</a>创作并维护；本网站采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。转载请注明作者及出处。</p>
<p>本文永久链接：<a href="https://fengqingxiuyi.github.io/2016/10/04/Android/View/ScrollView/永久显示滚动条/">https://fengqingxiuyi.github.io/2016/10/04/Android/View/ScrollView/永久显示滚动条/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;
    
    </summary>
    
      <category term="Android" scheme="https://fengqingxiuyi.github.io/categories/Android/"/>
    
    
      <category term="View" scheme="https://fengqingxiuyi.github.io/tags/View/"/>
    
  </entry>
  
  <entry>
    <title>自定义View开源项目</title>
    <link href="https://fengqingxiuyi.github.io/2016/10/03/Android/View/%E8%87%AA%E5%AE%9A%E4%B9%89View/%E8%87%AA%E5%AE%9A%E4%B9%89View%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/"/>
    <id>https://fengqingxiuyi.github.io/2016/10/03/Android/View/自定义View/自定义View开源项目/</id>
    <published>2016-10-03T13:50:21.000Z</published>
    <updated>2016-10-04T10:15:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="GridView-with-Header-and-Footer"><a href="#GridView-with-Header-and-Footer" class="headerlink" title="GridView with Header and Footer"></a>GridView with Header and Footer</h1><p>项目地址：<a href="https://github.com/liaohuqiu/android-GridViewWithHeaderAndFooter" target="_blank" rel="external">https://github.com/liaohuqiu/android-GridViewWithHeaderAndFooter</a></p>
<p>项目简介：即标题所示含义，使GridView支持addHeader和addFooter</p>
<p>遇到问题：业务要求，支持文字长按出现ActionMode，即 全选、复制、剪切…弹框，我以<code>TextView</code>的形式，配置属性<code>android:textIsSelectable=&quot;true&quot;</code>，将其添加到Header之后，长按无反应；然后以<code>EditText</code>的形式，将其添加到Header之后，长按仍无反应；最后发现是<font color="red">焦点抢占</font>的缘故，不过没有成功解决。</p>
<h1 id="Android单点触控技术"><a href="#Android单点触控技术" class="headerlink" title="Android单点触控技术"></a>Android单点触控技术</h1><p>项目地址：<a href="http://blog.csdn.net/xiaanming/article/details/42833893" target="_blank" rel="external">http://blog.csdn.net/xiaanming/article/details/42833893</a></p>
<p>项目简介：Android单点触控技术，对图片进行平移，缩放，旋转操作</p>
<p>项目优点：注释详细，解读方便；支持多种选项配置；支持其他选项的自定义配置（如：控制图标的显示、边框的显示等）。</p>
<p>项目不足之处：很难支持View是否旋转，暂未实现；很难支持View是否滑出显示区域，暂未实现。</p>
<h1 id="附"><a href="#附" class="headerlink" title="附"></a>附</h1><p>持续更新……</p>
<hr>
<p><strong>版权声明</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本网站如未注明转载，均由<a href="https://fengqingxiuyi.github.io/">青峰</a>创作并维护；本网站采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。转载请注明作者及出处。</p>
<p>本文永久链接：<a href="https://fengqingxiuyi.github.io/2016/10/03/Android/View/自定义View/自定义View开源项目/">https://fengqingxiuyi.github.io/2016/10/03/Android/View/自定义View/自定义View开源项目/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;GridView-with-Header-and-Footer&quot;&gt;&lt;a href=&quot;#GridView-with-Header-and-Footer&quot; class=&quot;headerlink&quot; title=&quot;GridView with Header and Foote
    
    </summary>
    
      <category term="Android" scheme="https://fengqingxiuyi.github.io/categories/Android/"/>
    
    
      <category term="View" scheme="https://fengqingxiuyi.github.io/tags/View/"/>
    
  </entry>
  
  <entry>
    <title>外网无法编译</title>
    <link href="https://fengqingxiuyi.github.io/2016/10/02/Android/AndroidStudio/Gradle/%E5%A4%96%E7%BD%91%E6%97%A0%E6%B3%95%E7%BC%96%E8%AF%91/"/>
    <id>https://fengqingxiuyi.github.io/2016/10/02/Android/AndroidStudio/Gradle/外网无法编译/</id>
    <published>2016-10-02T04:22:23.000Z</published>
    <updated>2016-10-02T04:50:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>大部分情况下，我们开发项目都是在公司中完成的，但是总会有需要在家里开发的时候。这个时候，如果你们公司的项目需要连接公司专有的maven仓库等链接地址，那么久可能会遇到无法编译的问题，具体表现为：<font color="red">一直处于编译中，无法正常停止。</font>然后我们就可以配置选项来解决这个问题，具体看下图：</p>
<p><img src="../../../../../../../images/Android/AndroidStudio/Gradle/外网无法编译.png" alt="外网无法编译"></p>
<p>如果你也是因为这个原因导致这样的问题的话，那就幸运了！如果不是，那我只能Good Luck！</p>
<hr>
<p><strong>版权声明</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本网站如未注明转载，均由<a href="https://fengqingxiuyi.github.io/">青峰</a>创作并维护；本网站采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。转载请注明作者及出处。</p>
<p>本文永久链接：<a href="https://fengqingxiuyi.github.io/2016/10/02/Android/AndroidStudio/Gradle/外网无法编译/">https://fengqingxiuyi.github.io/2016/10/02/Android/AndroidStudio/Gradle/外网无法编译/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;大部分情况下，我们开发项目都是在公司中完成的，但是总会有需要在家里开发的时候。这个时候，如果你们公司的项目需要连接公司专有的maven仓库等链接地址，那么久可能会遇到无法编译的问题，具体表现为：&lt;font color=&quot;red&quot;&gt;一直处于编译中，无法正常停止。&lt;/font&gt;
    
    </summary>
    
      <category term="Android" scheme="https://fengqingxiuyi.github.io/categories/Android/"/>
    
    
      <category term="AndroidStudio" scheme="https://fengqingxiuyi.github.io/tags/AndroidStudio/"/>
    
  </entry>
  
  <entry>
    <title>微信分享-错误锦集</title>
    <link href="https://fengqingxiuyi.github.io/2016/10/02/Android/%E5%BE%AE%E4%BF%A1/%E5%88%86%E4%BA%AB/%E5%BE%AE%E4%BF%A1%E5%88%86%E4%BA%AB-%E9%94%99%E8%AF%AF%E9%94%A6%E9%9B%86/"/>
    <id>https://fengqingxiuyi.github.io/2016/10/02/Android/微信/分享/微信分享-错误锦集/</id>
    <published>2016-10-02T04:14:35.000Z</published>
    <updated>2016-10-02T04:46:12.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="微信分享-分享链接"><a href="#微信分享-分享链接" class="headerlink" title="微信分享-分享链接"></a>微信分享-分享链接</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">WXWebpageObject webpage = <span class="keyword">new</span> WXWebpageObject();</div><div class="line">webpage.webpageUrl = result.link;</div><div class="line">WXMediaMessage msg = <span class="keyword">new</span> WXMediaMessage(webpage);</div><div class="line">msg.title = result.title;</div><div class="line">msg.description = result.desc;</div><div class="line">msg.thumbData = thumbData;</div><div class="line"></div><div class="line">SendMessageToWX.Req req = <span class="keyword">new</span> SendMessageToWX.Req();</div><div class="line">req.transaction = buildTransaction(<span class="string">"webpage"</span>);</div><div class="line">req.message = msg;</div><div class="line"><span class="keyword">if</span> (share2WX) &#123;</div><div class="line">  req.scene = SendMessageToWX.Req.WXSceneSession;  <span class="comment">// 分享到微信</span></div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">  req.scene = SendMessageToWX.Req.WXSceneTimeline; <span class="comment">// 分享到朋友圈</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">IWXAPI msgApi = getApi(context, APP_ID);</div><div class="line"></div><div class="line">msgApi.sendReq(req);</div></pre></td></tr></table></figure>
<p><strong><em>注意：</em></strong>sendReq方法是有返回值的，返回值类型为boolean，如果返回false，则表明分享失败，返回true，则表明分享成功。</p>
<p><strong><em>案例：</em></strong>达人店1.0.2.2版本 分享店铺-分享到微信好友 经常调不出微信页面，导致分享失败，但是 商品详情页-分享商品 正常。</p>
<p><strong><em>分析：</em></strong>经过对比发现，只有 thumbData 即 图片 有 大小 的差异，经过Logcat发现 前者 分享图片是用户头像，浏览器打开显示图片大小约为700k，后者 分享图片是商品图，浏览器打开显示图片大小约为150k，所以可以得出分享到微信是图片大小限制的。注意：浏览器打开显示图片的大小并非为thumbData的大小。</p>
<p><strong><em>解决：</em></strong>通过 谷歌 百度 得知 thumbData 不能大于 32k，我们只要以此压缩图片就行了。</p>
<p><font color="red">相关链接：</font><br><strong><em>官方FAQ：</em></strong><a href="https://open.weixin.qq.com/cgi-bin/showdocument?action=dir_list&amp;t=resource/res_list&amp;verify=1&amp;id=open1419318060&amp;token=&amp;lang=zh_CN" target="_blank" rel="external">https://open.weixin.qq.com/cgi-bin/showdocument?action=dir_list&amp;t=resource/res_list&amp;verify=1&amp;id=open1419318060&amp;token=&amp;lang=zh_CN</a></p>
<p><strong><em>解决微信分享图片，网址失效的Bug – 不完美解决：</em></strong><a href="http://blog.csdn.net/h3c4lenovo/article/details/10103057" target="_blank" rel="external">http://blog.csdn.net/h3c4lenovo/article/details/10103057</a></p>
<hr>
<p><strong>版权声明</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本网站如未注明转载，均由<a href="https://fengqingxiuyi.github.io/">青峰</a>创作并维护；本网站采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。转载请注明作者及出处。</p>
<p>本文永久链接：<a href="https://fengqingxiuyi.github.io/2016/10/02/Android/微信/分享/微信分享-错误锦集/">https://fengqingxiuyi.github.io/2016/10/02/Android/微信/分享/微信分享-错误锦集/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;微信分享-分享链接&quot;&gt;&lt;a href=&quot;#微信分享-分享链接&quot; class=&quot;headerlink&quot; title=&quot;微信分享-分享链接&quot;&gt;&lt;/a&gt;微信分享-分享链接&lt;/h1&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
    
    </summary>
    
      <category term="Android" scheme="https://fengqingxiuyi.github.io/categories/Android/"/>
    
    
      <category term="微信" scheme="https://fengqingxiuyi.github.io/tags/%E5%BE%AE%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>保存图片到相册</title>
    <link href="https://fengqingxiuyi.github.io/2016/09/21/Android/%E5%9B%BE%E7%89%87/%E7%9B%B8%E5%86%8C/%E4%BF%9D%E5%AD%98%E5%9B%BE%E7%89%87%E5%88%B0%E7%9B%B8%E5%86%8C/"/>
    <id>https://fengqingxiuyi.github.io/2016/09/21/Android/图片/相册/保存图片到相册/</id>
    <published>2016-09-21T06:28:25.000Z</published>
    <updated>2016-09-21T06:29:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>本文讲述如何<code>保存图片到相册</code>：</p>
<p>其本质上并没有把图片保存到相册中，实际上是保存在SD卡下自定义的文件夹中，目的只是让<code>QQ</code>和<code>微信</code>在选择照片的时候立刻显示，<font color="red">注：其实<code>QQ</code>和<code>微信</code>也是这样做的</font>。</p>
<p>另外：这里参数只接受<code>File</code>类型，对于<code>Bitmap</code>类型，可以自行转化，如下代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">File file = <span class="keyword">new</span> File(parentDir, fileName);</div><div class="line">FileOutputStream fos = <span class="keyword">null</span>;</div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line">    fos = <span class="keyword">new</span> FileOutputStream(file);</div><div class="line">    bmp.compress(Bitmap.CompressFormat.JPEG, <span class="number">100</span>, fos);</div><div class="line">    fos.flush();</div><div class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">    LogUtils.e(e);</div><div class="line">&#125; <span class="keyword">finally</span> &#123;</div><div class="line">    <span class="comment">// 回收bitmap</span></div><div class="line">    bmp.recycle();</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> != fos) &#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            fos.close();</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e1) &#123;</div><div class="line">            e1.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="保存方式"><a href="#保存方式" class="headerlink" title="保存方式"></a>保存方式</h1><h2 id="方式1-扫描文件通知相册更新"><a href="#方式1-扫描文件通知相册更新" class="headerlink" title="方式1-扫描文件通知相册更新"></a>方式1-扫描文件通知相册更新</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 通知相册更新</span></div><div class="line">Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);</div><div class="line">Uri uri = Uri.fromFile(file);</div><div class="line">intent.setData(uri);</div><div class="line">context.sendBroadcast(intent);</div></pre></td></tr></table></figure>
<h2 id="方式1-错误操作"><a href="#方式1-错误操作" class="headerlink" title="方式1-错误操作"></a>方式1-错误操作</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">MediaStore.Images.Media.insertImage(context.getContentResolver(), file.getAbsolutePath(), <span class="string">"name"</span>, <span class="string">"description"</span>);</div><div class="line"></div><div class="line"><span class="comment">// 通知相册更新</span></div><div class="line">Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);</div><div class="line">Uri uri = Uri.fromFile(file);</div><div class="line">intent.setData(uri);</div><div class="line">context.sendBroadcast(intent);</div></pre></td></tr></table></figure>
<p>对比 方式1 和 错误方式 ，我们可以发现其实就是多了一行<code>insertImage</code>的代码，然后就不能被<code>QQ</code>和<code>微信</code>立刻识别了，好伤心~~</p>
<p>这里我稍微研究了一下，然而没有发现本质原因，不过做了以下<font color="red">猜测</font>，有兴趣的可以自行研究源码。</p>
<p>因为在使用<code>ACTION_MEDIA_SCANNER_SCAN_FILE</code>方式通知相册更新时，也需要执行类似<code>insertImage</code>方法内部的某些操作，可能和<code>ContentProvider</code>相关的数据库有关，所以如果你先执行了<code>insertImage</code>方法，那么它在接收到这个<code>ACTION_MEDIA_SCANNER_SCAN_FILE</code>广播的时候，做了如下判断：如果已经执行了<code>insertImage</code>方法，那么<code>return;</code>，所以不会执行再<code>通知相册更新</code>了。</p>
<h2 id="方式2-完整操作"><a href="#方式2-完整操作" class="headerlink" title="方式2-完整操作"></a>方式2-完整操作</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 插入file数据到相册</span></div><div class="line">ContentValues values = <span class="keyword">new</span> ContentValues(<span class="number">9</span>);</div><div class="line">values.put(MediaStore.Images.Media.TITLE, <span class="string">"Camera"</span>);</div><div class="line">values.put(MediaStore.Images.Media.DISPLAY_NAME, filename);</div><div class="line">values.put(MediaStore.Images.Media.DATE_TAKEN, System.currentTimeMillis());</div><div class="line">values.put(MediaStore.Images.Media.MIME_TYPE, <span class="string">"image/jpeg"</span>);</div><div class="line">values.put(MediaStore.Images.Media.ORIENTATION, <span class="number">0</span>);</div><div class="line">values.put(MediaStore.Images.Media.DATA, file.getAbsolutePath());</div><div class="line">values.put(MediaStore.Images.Media.SIZE, file.length());</div><div class="line">Uri uri = context.getContentResolver().insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, values);</div><div class="line"><span class="comment">// 通知相册更新</span></div><div class="line">context.sendBroadcast(<span class="keyword">new</span> Intent(<span class="string">"com.android.camera.NEW_PICTURE"</span>, uri));</div></pre></td></tr></table></figure>
<h2 id="方式2-简单操作"><a href="#方式2-简单操作" class="headerlink" title="方式2-简单操作"></a>方式2-简单操作</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 插入file数据到相册</span></div><div class="line">ContentValues values = <span class="keyword">new</span> ContentValues();</div><div class="line">values.put(MediaStore.Images.Media.DATA, file.getAbsolutePath());</div><div class="line">values.put(MediaStore.Images.Media.MIME_TYPE, <span class="string">"image/jpeg"</span>);</div><div class="line">Uri uri = context.getContentResolver().insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, values);</div><div class="line"><span class="comment">// 通知相册更新</span></div><div class="line">context.sendBroadcast(<span class="keyword">new</span> Intent(<span class="string">"com.android.camera.NEW_PICTURE"</span>, uri));</div></pre></td></tr></table></figure>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>对于<code>Google</code>和<code>百度</code>出来的<code>Android保存图片到相册</code>表示无奈，90%以上都是一样的，这个时候如果我们还是依靠<code>搜索</code>，消耗的成本是很大的，如果你能够从<code>源码</code>入手，可能就会给你提供一些思路，例如：上述所说的<code>方式2</code>就是从<code>insertImage</code>方法中得出的，源码如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Insert an image and create a thumbnail for it.</div><div class="line"> *</div><div class="line"> * <span class="doctag">@param</span> cr The content resolver to use</div><div class="line"> * <span class="doctag">@param</span> source The stream to use for the image</div><div class="line"> * <span class="doctag">@param</span> title The name of the image</div><div class="line"> * <span class="doctag">@param</span> description The description of the image</div><div class="line"> * <span class="doctag">@return</span> The URL to the newly created image, or &lt;code&gt;null&lt;/code&gt; if the image failed to be stored</div><div class="line"> *              for any reason.</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String <span class="title">insertImage</span><span class="params">(ContentResolver cr, Bitmap source,</span></span></div><div class="line">                                       String title, String description) &#123;</div><div class="line">    ContentValues values = <span class="keyword">new</span> ContentValues();</div><div class="line">    values.put(Images.Media.TITLE, title);</div><div class="line">    values.put(Images.Media.DESCRIPTION, description);</div><div class="line">    values.put(Images.Media.MIME_TYPE, <span class="string">"image/jpeg"</span>);</div><div class="line"></div><div class="line">    Uri url = <span class="keyword">null</span>;</div><div class="line">    String stringUrl = <span class="keyword">null</span>;    <span class="comment">/* value to be returned */</span></div><div class="line"></div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        url = cr.insert(EXTERNAL_CONTENT_URI, values);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (source != <span class="keyword">null</span>) &#123;</div><div class="line">            OutputStream imageOut = cr.openOutputStream(url);</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                source.compress(Bitmap.CompressFormat.JPEG, <span class="number">50</span>, imageOut);</div><div class="line">            &#125; <span class="keyword">finally</span> &#123;</div><div class="line">                imageOut.close();</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">long</span> id = ContentUris.parseId(url);</div><div class="line">            <span class="comment">// Wait until MINI_KIND thumbnail is generated.</span></div><div class="line">            Bitmap miniThumb = Images.Thumbnails.getThumbnail(cr, id,</div><div class="line">                    Images.Thumbnails.MINI_KIND, <span class="keyword">null</span>);</div><div class="line">            <span class="comment">// This is for backward compatibility.</span></div><div class="line">            Bitmap microThumb = StoreThumbnail(cr, miniThumb, id, <span class="number">50F</span>, <span class="number">50F</span>,</div><div class="line">                    Images.Thumbnails.MICRO_KIND);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            Log.e(TAG, <span class="string">"Failed to create thumbnail, removing original"</span>);</div><div class="line">            cr.delete(url, <span class="keyword">null</span>, <span class="keyword">null</span>);</div><div class="line">            url = <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">        Log.e(TAG, <span class="string">"Failed to insert image"</span>, e);</div><div class="line">        <span class="keyword">if</span> (url != <span class="keyword">null</span>) &#123;</div><div class="line">            cr.delete(url, <span class="keyword">null</span>, <span class="keyword">null</span>);</div><div class="line">            url = <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (url != <span class="keyword">null</span>) &#123;</div><div class="line">        stringUrl = url.toString();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> stringUrl;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<p><strong>版权声明</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本网站如未注明转载，均由<a href="https://fengqingxiuyi.github.io/">青峰</a>创作并维护；本网站采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。转载请注明作者及出处。</p>
<p>本文永久链接：<a href="https://fengqingxiuyi.github.io/2016/09/21/Android/图片/相册/保存图片到相册/">https://fengqingxiuyi.github.io/2016/09/21/Android/图片/相册/保存图片到相册/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;序&quot;&gt;&lt;a href=&quot;#序&quot; class=&quot;headerlink&quot; title=&quot;序&quot;&gt;&lt;/a&gt;序&lt;/h1&gt;&lt;p&gt;本文讲述如何&lt;code&gt;保存图片到相册&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;其本质上并没有把图片保存到相册中，实际上是保存在SD卡下自定义的文件夹中，目的
    
    </summary>
    
      <category term="Android" scheme="https://fengqingxiuyi.github.io/categories/Android/"/>
    
    
      <category term="图片" scheme="https://fengqingxiuyi.github.io/tags/%E5%9B%BE%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>adb无线连接</title>
    <link href="https://fengqingxiuyi.github.io/2016/08/30/Android/Wiki/adb%E6%97%A0%E7%BA%BF%E8%BF%9E%E6%8E%A5/"/>
    <id>https://fengqingxiuyi.github.io/2016/08/30/Android/Wiki/adb无线连接/</id>
    <published>2016-08-30T10:14:21.000Z</published>
    <updated>2016-10-05T01:36:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>注：本文属于工具类文章，可以直接使用；文中所述的<code>5555</code>为自定义的端口号，可自行配置，注意需要在各个地方保持统一。</p>
<h1 id="情况"><a href="#情况" class="headerlink" title="情况"></a>情况</h1><p>1.如果已经可以用usb连接adb，那么可以通过以下命令切换到无线连接方式。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">adb tcpip 5555 <span class="comment"># 5555为一个自定义的端口，只要与下一行命令的端口保持统一即可</span></div><div class="line">adb connect 192.168.0.101:5555 <span class="comment"># 192.168.0.101为手机无线网络的ip地址</span></div></pre></td></tr></table></figure>
<p>通过下面的命令可以切换回usb方式。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb usb</div></pre></td></tr></table></figure>
<p>2.如果无法通过usb方式连接，比如因为没有驱动或没有数据线，那么可以在设备上执行以下命令，切换到无线连接方式。<font color="red">注意此方式需要root权限。</font></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">setprop service.adb.tcp.port 5555</div><div class="line">stop adbd</div><div class="line">start adbd</div></pre></td></tr></table></figure>
<p>通过以下命令切换回usb方式。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">setprop service.adb.tcp.port -1</div><div class="line">stop adbd</div><div class="line">start adbd</div></pre></td></tr></table></figure>
<p>3.有一些第三方工具，把第二种方法做成了app，只要点一个按钮，就可以完成切换。比如<a href="https://market.android.com/search?q=adbWireless&amp;so=1&amp;c=apps" target="_blank" rel="external">adbWireless</a>。<font color="red">此工具同样需要root权限。</font></p>
<hr>
<p><strong>版权声明</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本网站如未注明转载，均由<a href="https://fengqingxiuyi.github.io/">青峰</a>创作并维护；本网站采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。转载请注明作者及出处。</p>
<p>本文永久链接：<a href="https://fengqingxiuyi.github.io/2016/08/30/Android/Wiki/adb无线连接/">https://fengqingxiuyi.github.io/2016/08/30/Android/Wiki/adb无线连接/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;注：本文属于工具类文章，可以直接使用；文中所述的&lt;code&gt;5555&lt;/code&gt;为自定义的端口号，可自行配置，注意需要在各个地方保持统一。&lt;/p&gt;
&lt;h1 id=&quot;情况&quot;&gt;&lt;a href=&quot;#情况&quot; class=&quot;headerlink&quot; title=&quot;情况&quot;&gt;&lt;/a&gt;情况
    
    </summary>
    
      <category term="Android" scheme="https://fengqingxiuyi.github.io/categories/Android/"/>
    
    
      <category term="Wiki" scheme="https://fengqingxiuyi.github.io/tags/Wiki/"/>
    
  </entry>
  
  <entry>
    <title>模块封装流程</title>
    <link href="https://fengqingxiuyi.github.io/2016/08/25/ShowJoy/%E6%A8%A1%E5%9D%97/%E6%A8%A1%E5%9D%97%E5%B0%81%E8%A3%85%E6%B5%81%E7%A8%8B/"/>
    <id>https://fengqingxiuyi.github.io/2016/08/25/ShowJoy/模块/模块封装流程/</id>
    <published>2016-08-25T09:43:15.000Z</published>
    <updated>2016-11-10T08:11:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>1、打开<a href="http://git.showjoy.net/" target="_blank" rel="external">http://git.showjoy.net/</a>页面，点击右边<code>Projects</code>选项卡下的绿色按钮<code>&quot;+ New project&quot;</code>，如果没有该按钮需要申请权限。</p>
<p>2、点击<code>&quot;+ New project&quot;</code>按钮后会进入<a href="http://git.showjoy.net/projects/new" target="_blank" rel="external">http://git.showjoy.net/projects/new</a>页面，填写必要的<code>Project name（如：test）</code>，可选的<code>Description</code>，选择正确的<code>Namespace（如：qingfeng）</code>，最后点击<code>&quot;Create project&quot;</code>按钮。</p>
<p>3、点击<code>&quot;Create project&quot;</code>按钮后会进入<a href="http://git.showjoy.net/qingfeng/test" target="_blank" rel="external">http://git.showjoy.net/qingfeng/test</a>页面，该页面会告诉你如何配置git参数，创建仓库以及代码的提交与推送。</p>
<p>这里我个人觉得<a href="http://git.showjoy.net/qingfeng/test" target="_blank" rel="external">http://git.showjoy.net/qingfeng/test</a>页面描述的不够清晰，所以再简要描述一下操作流程：</p>
<p>3.1、安装git，可以查看这篇文章<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000" target="_blank" rel="external">廖雪峰 git教程</a></p>
<p>3.2、打开终端，cd到Android Studio中某个已经存在的想要将某个（某些）模块push到远程仓库的工程根目录下，然后再cd到某个想要push到远程仓库的模块目录下。</p>
<p>3.3、输入以下命令，初始化git：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git init</div></pre></td></tr></table></figure>
<p>3.4、输入以下命令，查看git配置文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git config --list</div></pre></td></tr></table></figure>
<p>3.4.1、配置<code>user.name</code>和<code>user.email</code></p>
<p>如果没有配置<code>user.name</code>和<code>user.email</code>，或者想要修改这两个参数的，都可以执行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user.name <span class="string">"your name"</span></div><div class="line">git config --global user.email <span class="string">"your email"</span></div></pre></td></tr></table></figure>
<p>3.4.2、配置<code>remote.origin.url</code></p>
<p>如果没有<code>remote.origin.url</code>，可以使用以下命令，将本地仓库和远程仓库进行关联：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git remote add origin git@git.showjoy.net:qingfeng/test.git</div></pre></td></tr></table></figure>
<p>注意：<code>git@git.showjoy.net:qingfeng/test.git</code>在<a href="http://git.showjoy.net/qingfeng/test" target="_blank" rel="external">http://git.showjoy.net/qingfeng/test</a>页面右上角</p>
<p>如果想要修改<code>remote.origin.url</code>的值，可以使用以下命令，重新赋值：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">git remte origin <span class="built_in">set</span>-url newUrl</div><div class="line">或</div><div class="line">git remote rm origin </div><div class="line">git remote add origin newUrl</div><div class="line">或</div><div class="line">直接修改config文件</div></pre></td></tr></table></figure>
<p>3.5、输入以下命令，将本地已经存在的文件添加到git，并推送到远程仓库：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git add .</div><div class="line">git commit -m <span class="string">'first commit'</span></div><div class="line">git push -u origin master</div></pre></td></tr></table></figure>
<p>3.6、为该模块添加<code>README.md</code>文件：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">touch README.md</div><div class="line">git add README.md</div><div class="line">git commit -m <span class="string">'新增说明文档'</span></div><div class="line">git push -u origin master</div></pre></td></tr></table></figure>
<p>3.7、全部正确执行后，就可以在Android Studio中正常开发了！</p>
<ol>
<li>因为我们的模块最终是要给其他模块提供坐标依赖（compile）的，所以需要在Jenkins上进行模块的构建，在模块构建之前我们需要配置一些参数：</li>
</ol>
<p>4.1、工程参数配置</p>
<font color="blue"><strong><em>build.gradle文件：</em></strong></font>

<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">// Top-level build file <span class="built_in">where</span> you can add configuration options common to all sub-projects/modules.</div><div class="line"></div><div class="line">buildscript &#123;</div><div class="line">    repositories &#123;</div><div class="line">        jcenter()</div><div class="line">    &#125;</div><div class="line">    dependencies &#123;</div><div class="line">        classpath <span class="string">'com.android.tools.build:gradle:2.1.2'</span></div><div class="line"></div><div class="line">        // NOTE: Do not place your application dependencies here; they belong</div><div class="line">        // <span class="keyword">in</span> the individual module build.gradle files</div><div class="line">        //支持java8的lambda</div><div class="line">        classpath <span class="string">'me.tatarka:gradle-retrolambda:3.2.5'</span></div><div class="line">        classpath <span class="string">'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.5.5'</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">allprojects &#123;</div><div class="line">    repositories &#123;</div><div class="line">        //新增公司的maven库</div><div class="line">        maven &#123;url <span class="string">'http://192.168.0.62:8081/repository/maven-snapshots/'</span>&#125;</div><div class="line">        maven &#123;url <span class="string">'http://192.168.0.62:8081/repository/maven-releases/'</span>&#125;</div><div class="line">        jcenter()</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">task clean(<span class="built_in">type</span>: Delete) &#123;</div><div class="line">    delete rootProject.buildDir</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<font color="blue"><strong><em>gradle.properties文件：</em></strong></font>

<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Project-wide Gradle settings.</span></div><div class="line"></div><div class="line"><span class="comment"># IDE (e.g. Android Studio) users:</span></div><div class="line"><span class="comment"># Gradle settings configured through the IDE *will override*</span></div><div class="line"><span class="comment"># any settings specified in this file.</span></div><div class="line"></div><div class="line"><span class="comment"># For more details on how to configure your build environment visit</span></div><div class="line"><span class="comment"># http://www.gradle.org/docs/current/userguide/build_environment.html</span></div><div class="line"></div><div class="line"><span class="comment"># Specifies the JVM arguments used for the daemon process.</span></div><div class="line"><span class="comment"># The setting is particularly useful for tweaking memory settings.</span></div><div class="line"><span class="comment"># Default value: -Xmx10248m -XX:MaxPermSize=256m</span></div><div class="line"><span class="comment"># org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8</span></div><div class="line"></div><div class="line"><span class="comment"># When configured, Gradle will run in incubating parallel mode.</span></div><div class="line"><span class="comment"># This option should only be used with decoupled projects. More details, visit</span></div><div class="line"><span class="comment"># http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects</span></div><div class="line"><span class="comment"># org.gradle.parallel=true</span></div><div class="line">systemProp.minSdkVersion=14</div><div class="line">org.gradle.jvmargs=-XX\:MaxPermSize\=512m</div><div class="line">systemProp.targetSdkVersion=21</div><div class="line">org.gradle.daemon=<span class="literal">true</span></div><div class="line">systemProp.compileSdkVersion=23</div><div class="line">org.gradle.parallel=<span class="literal">true</span></div><div class="line">android.useDeprecatedNdk=<span class="literal">true</span></div><div class="line">systemProp.buildToolsVersion=23.0.2</div><div class="line">org.gradle.configureondemand=<span class="literal">true</span></div></pre></td></tr></table></figure>
<p>4.2、模块参数配置</p>
<font color="blue"><strong><em>build.gradle文件：</em></strong></font>

<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">apply plugin: <span class="string">'com.android.library'</span></div><div class="line"></div><div class="line">dependencies &#123;</div><div class="line">    compile fileTree(dir: <span class="string">'libs'</span>, include: [<span class="string">'*.jar'</span>])</div><div class="line">    compile <span class="string">'com.android.support:appcompat-v7:23.4.0'</span></div><div class="line"></div><div class="line">    compile <span class="string">'io.reactivex:rxjava:1.1.6'</span></div><div class="line">    compile <span class="string">'io.reactivex:rxandroid:1.1.0'</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">version=<span class="string">'1.0.2'</span></div><div class="line">description = <span class="string">'showjoy compress library'</span></div><div class="line">ext.pom_packaging = <span class="string">'aar'</span></div><div class="line">ext.pom_groupId = <span class="string">'com.showjoy.image'</span></div><div class="line">ext.pom_artifactId = <span class="string">'compress'</span></div><div class="line">ext.pom_name = <span class="string">'showjoy_compress'</span></div><div class="line">ext.pom_snapshot = <span class="literal">false</span></div><div class="line"></div><div class="line"></div><div class="line">apply from :<span class="string">'http://git.showjoy.net/android/mvn-repo/raw/master/library.gradle'</span></div></pre></td></tr></table></figure>
<p>5、根据业务需要更新模块代码，并执行commit和push等操作即可，完成模块的制作后，我们就可以在Jenkins上进行项目构建了，具体可以参考这篇文章：<a href="https://fengqingxiuyi.github.io/2016/07/19/ShowJoy/Jenkins/Jenkins项目构建过程详解/">Jenkins项目构建过程详解</a></p>
<hr>
<p><strong>版权声明</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本网站如未注明转载，均由<a href="https://fengqingxiuyi.github.io/">青峰</a>创作并维护；本网站采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。转载请注明作者及出处。</p>
<p>本文永久链接：<a href="https://fengqingxiuyi.github.io/2016/08/25/ShowJoy/模块/模块封装流程/">https://fengqingxiuyi.github.io/2016/08/25/ShowJoy/模块/模块封装流程/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1、打开&lt;a href=&quot;http://git.showjoy.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://git.showjoy.net/&lt;/a&gt;页面，点击右边&lt;code&gt;Projects&lt;/code&gt;选项卡下的绿色按钮&lt;cod
    
    </summary>
    
      <category term="ShowJoy" scheme="https://fengqingxiuyi.github.io/categories/ShowJoy/"/>
    
    
      <category term="模块" scheme="https://fengqingxiuyi.github.io/tags/%E6%A8%A1%E5%9D%97/"/>
    
  </entry>
  
  <entry>
    <title>yield浅析</title>
    <link href="https://fengqingxiuyi.github.io/2016/08/24/Python/yield%E6%B5%85%E6%9E%90/"/>
    <id>https://fengqingxiuyi.github.io/2016/08/24/Python/yield浅析/</id>
    <published>2016-08-24T06:32:57.000Z</published>
    <updated>2016-11-10T05:56:02.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="相关文档"><a href="#相关文档" class="headerlink" title="相关文档"></a>相关文档</h1><p><a href="https://docs.python.org/3.5/reference/expressions.html?#yield-expressions" target="_blank" rel="external">官方文档-Yield expressions</a><br><a href="https://www.ibm.com/developerworks/cn/opensource/os-cn-python-yield/" target="_blank" rel="external">廖雪峰-Python yield 使用浅析</a></p>
<h1 id="个人理解"><a href="#个人理解" class="headerlink" title="个人理解"></a>个人理解</h1><p>转载自：<a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001432090171191d05dae6e129940518d1d6cf6eeaaa969000#0" target="_blank" rel="external">Python教程</a>中用户<code>逝去的9211 Created at 8-3 17:43, Last updated at 8-3 17:43</code>的评论。</p>
<p>注：以下讲的next()都是object的前后双下划线next方法</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">yield</span> &lt;expression&gt;</div></pre></td></tr></table></figure>
<p>解释器在遇到这个语句时，先计算expression，然后将结果返回给上一个调用者。而在第二次调用next()时，会从yield的下个语句开始执行。</p>
<p>而讲到send()和next()的区别：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">consumer</span><span class="params">()</span>:</span></div><div class="line">    r = <span class="string">'here'</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">3</span>):</div><div class="line">        <span class="keyword">yield</span> r</div><div class="line">        r = <span class="string">'200 OK'</span>+ str(i)</div><div class="line"></div><div class="line">c = consumer()</div><div class="line">n1 = c.next()</div><div class="line">n2 = c.next()</div><div class="line">n3 = c.next()</div></pre></td></tr></table></figure>
<p>对于普通的生成器，第一个next 调用，相当于启动生成器，会从生成器的第一行代码开始执行，直到第一次执行完yield语句（第4行），然后跳出生成器函数。<br>然后第二个next 调用，从yield语句的下一句语句执行（第5行），然后重新运行到yield语句，执行后跳出，后面的以此类推。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">consumer</span><span class="params">()</span>:</span></div><div class="line">    r = <span class="string">'here'</span></div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        n1 = <span class="keyword">yield</span> r</div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span> n1:</div><div class="line">            <span class="keyword">return</span></div><div class="line">        print(<span class="string">'[CONSUMER] Consuming %s...'</span> % n1)</div><div class="line">        r = <span class="string">'200 OK'</span>+str(n1)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">produce</span><span class="params">(c)</span>:</span></div><div class="line">    aa = c.send(<span class="keyword">None</span>)</div><div class="line">    n = <span class="number">0</span></div><div class="line">    <span class="keyword">while</span> n &lt; <span class="number">5</span>:</div><div class="line">        n = n + <span class="number">1</span></div><div class="line">        print(<span class="string">'[PRODUCER] Producing %s...'</span> % n)</div><div class="line">        r1 = c.send(n)</div><div class="line">        print(<span class="string">'[PRODUCER] Consumer return: %s'</span> % r1)</div><div class="line">    c.close()</div><div class="line"></div><div class="line">c = consumer()</div><div class="line">produce(c)</div></pre></td></tr></table></figure>
<p>send(msg)和next()在一定程度上是类似的，区别是send()可以传递yield表达式的值进去，而next()不能，只能传递None进去。我们可以看做next()和send(None)是一致的。<br>注意：第一次调用时，使用next()或send(None),不能使用send发送一个非None的值，否则会报错，因为没有python yield语句来接收这个值。<br>第一次执行send(None)(11行)，启动生成器，第一行代码执行到yield后，跳出生成器函数，此时，n1一直没有定义。<br>下面运行到c.send(1)，进入生成器函数，从第4行开始执行，先把1赋值给n1,但是并不执行yield语句部分。<br>下面继续从yield的下一语句继续执行，然后重新运行到yield语句，执行后，跳出生成器。</p>
<p>综上，send和next 相比，多了一次赋值的动作，其他的流程是相同的。</p>
<hr>
<p><strong>版权声明</strong></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本网站如未注明转载，均由<a href="https://fengqingxiuyi.github.io/">青峰</a>创作并维护；本网站采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。转载请注明作者及出处。</p>
<p>本文永久链接：<a href="https://fengqingxiuyi.github.io/2016/08/24/Python/yield浅析/">https://fengqingxiuyi.github.io/2016/08/24/Python/yield浅析/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;相关文档&quot;&gt;&lt;a href=&quot;#相关文档&quot; class=&quot;headerlink&quot; title=&quot;相关文档&quot;&gt;&lt;/a&gt;相关文档&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://docs.python.org/3.5/reference/expressions.htm
    
    </summary>
    
      <category term="Python" scheme="https://fengqingxiuyi.github.io/categories/Python/"/>
    
    
      <category term="Python基础" scheme="https://fengqingxiuyi.github.io/tags/Python%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
</feed>
